AWSTemplateFormatVersion: 2010-09-09
Parameters:
  ApplicationName:
    Type: String
    Default: TestApp
  AutoScalingGroupName:
    Type: String
  ELBTargetGroupName:
    Type: String
Resources:
  TestAppCodeDeploy:
    Type: 'AWS::CodeDeploy::Application'
    Properties:
      ApplicationName: !Ref ApplicationName
  TestAppCodeDeployRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Sid: '1'
            Effect: Allow
            Principal:
              Service: codedeploy.eu-west-1.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole'
      Path: /
      RoleName: AppSRN
  TestAppCodeDeployDG:
    Type: 'AWS::CodeDeploy::DeploymentGroup'
    Properties:
      ApplicationName: !Ref ApplicationName
      DeploymentGroupName: Development
      AutoScalingGroups:
        - !Ref AutoScalingGroupName
      ServiceRoleArn: !GetAtt TestAppCodeDeployRole.Arn
      DeploymentConfigName:  CodeDeployDefault.OneAtATime
      DeploymentStyle:
        DeploymentType: IN_PLACE
        DeploymentOption: WITH_TRAFFIC_CONTROL
      LoadBalancerInfo:
        TargetGroupInfoList:
          - Name: !Ref ELBTargetGroupName
  GitHubCredentials:
    Type: 'AWS::IAM::AccessKey'
    Properties:
      UserName: !Ref GitHubUser
  GitHubUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: GitHubIntegration
  GitHubPolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: 'codedeploy:GetDeploymentConfig'
            Resource: !Join [ ':', [ 'arn:aws:codedeploy', !Ref 'AWS::Region', !Ref 'AWS::AccountId', 'deploymentconfig:*'] ]
          - Effect: Allow
            Action: 'codedeploy:RegisterApplicationRevision'
            Resource: !Join [ ':', [ 'arn:aws:codedeploy', !Ref 'AWS::Region', !Ref 'AWS::AccountId', 'application', !Ref ApplicationName] ]
          - Effect: Allow
            Action: 'codedeploy:GetApplicationRevision'
            Resource: !Join [ ':', [ 'arn:aws:codedeploy', !Ref 'AWS::Region', !Ref 'AWS::AccountId', 'application', !Ref ApplicationName] ]
          - Effect: Allow
            Action: 'codedeploy:CreateDeployment'
            Resource: !Join [ '', [ 'arn:aws:codedeploy:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':deploymentgroup:', !Ref ApplicationName, '/', 'Development'] ]
      PolicyName: GitHubIntegrationPolicy
      Users:
        - !Ref GitHubUser
Outputs:
  AccessKey:
    Value: !Ref GitHubCredentials
  Secret:
    Value: !GetAtt GitHubCredentials.SecretAccessKey
